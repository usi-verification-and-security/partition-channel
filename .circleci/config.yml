version: 2.1
jobs:
    build-recent:
        docker:
          - image: cimg/base:stable
            auth:
                username: mydockerhub-user
                password: $DOCKERHUB_PASSWORD
            environment:
                CMAKE_BUILD_TYPE: Release
                FLAGS: -Wall -Wextra -Werror

        steps:
            - checkout
            - run:
                name: apt-get update
                command: sudo apt-get update
            - run:
                name: install dependencies
                command: sudo apt-get install cmake libubsan0
            - run:
                name: Debug build gcc
                command: ./ci/run_ci_commands.sh
                environment:
                    CMAKE_BUILD_TYPE: Debug
                    INSTALL_WITH_SUDO: "yes"
            - run:
                name: Release build gcc
                command: ./ci/run_ci_commands.sh
                environment:
                    CMAKE_BUILD_TYPE: Release
                    INSTALL_WITH_SUDO: "yes"
            - run:
                name: Install clang
                command: |
                    sudo apt-get install clang
                    sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang++ 60
            - run:
                name: Debug build llvm
                command: ./ci/run_ci_commands.sh
                environment:
                    CMAKE_BUILD_TYPE: Debug
                    FLAGS: -Wall -Werror=sign-compare -Wunused-lambda-capture -fsanitize=signed-integer-overflow,address,undefined
                    SFLAGS: -Wall -Wextra -Werror -fsanitize=signed-integer-overflow,thread,undefined
                    INSTALL_WITH_SUDO: "yes"
                    PROTOCOL_EXAMPLE: "yes"
            - run:
                name: Release build llvm
                command: ./ci/run_ci_commands.sh
                environment:
                    CMAKE_BUILD_TYPE: Release
                    INSTALL_WITH_SUDO: "yes"

    # To set up the centos-7 environment:
    #  - yum install centos-release-scl devtoolset-8 gmp-devel libedit-devel
    #  - scl enable devtoolset-8 bash
    build-starexec:
        docker:
            - image: centos:7
              auth:
                username: mydockerhub-user
                password: $DOCKERHUB_PASSWORD
              environment:
                CMAKE_BUILD_TYPE: Release
                FLAGS: -Wall -Wextra -Werror

        steps:
            - run:
                name: Install the environment
                command: |
                    yum -y install centos-release-scl
                    yum -y install devtoolset-8
                    yum -y install git
                    yum -y install rh-python38
                    yum -y install python3-pip
                    yum -y install zlib-devel
                    pip3 install wheel
                    echo "pip3 install pyinstaller" |scl enable devtoolset-8 bash
            - run:
                name: Set up newer version of cmake
                command: pip3 install cmake
            - checkout
            - run:
                name: Debug build gcc under devtoolset-8
                command: |
                    cat ./ci/run_ci_commands.sh |scl enable devtoolset-8 bash
                environment:
                    CMAKE_BUILD_TYPE: Debug
            - run:
                name: Release build gcc under devtoolset-8
                command: |
                    cat ./ci/run_ci_commands.sh |scl enable devtoolset-8 bash
                environment:
                    CMAKE_BUILD_TYPE: Release

    build-macos:
        macos:
            xcode: 12.4.0
        steps:
            - run:
                name: Packages
                command: |
                  brew install cmake
            - checkout
            - run:
                name: Release build OS X
                command: ./ci/run_ci_commands.sh
                environment:
                    CMAKE_BUILD_TYPE: Release
                    FLAGS: -Wall -Wextra -Werror

workflows:
  build-test:
      jobs:
        - build-starexec:
          filters: &filters-build-test
            tags:
              only: /^v.*/
        - build-recent:
          filters:
            <<: *filters-build-test
        - build-macos:
          filters:
            <<: *filters-build-test
